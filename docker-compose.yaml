version: '3.8'
name: mock-service
services:
  grpc-mock-service:
    build: server_mock/grpc-service
    container_name: grpc-mock-service
    volumes:
      - ./server_mock/grpc-service/wiremock-data/__files:/home/wiremock/__files
      - ./server_mock/grpc-service/wiremock-data/mappings:/home/wiremock/mappings
    ports:
      - "29090:8080"
  http-mock-service:
    image: wiremock/wiremock:3.6.0
    container_name: http-mock-service
    volumes:
      - ./server_mock/http-service/wiremock-data/__files:/home/wiremock/__files
      - ./server_mock/http-service/wiremock-data/mappings:/home/wiremock/mappings
    ports:
      - "28080:8080"
#  cache:
#    image: redis:6.2-alpine
#    restart: always
#    ports:
#      - '6379:6379'
#    command: redis-server

#  kafka-ui:
#    container_name: local-kafka-ui
#    image: 'provectuslabs/kafka-ui:latest'
#    ports:
#      - '19090:8080'
#    environment:
#      - DYNAMIC_CONFIG_ENABLED=true
#      - KAFKA_CLUSTERS_0_NAME=cluster1
#      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=10.50.1.6:9092,10.50.1.7:9092,10.50.1.8:9092
#      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=10.50.1.76:9092,10.50.1.77:9092,10.50.1.78:9092

#  zookeeper:
#    container_name: local-zookeeper
#    image: 'zookeeper:latest'
#    ports:
#      - '2181:2181'
#    environment:
#      - ZOOKEEPER_CLIENT_PORT=2181
#      - ALLOW_ANONYMOUS_LOGIN=yes
#  #    networks:
#  #      - mynetwork
#  kafka:
#    image: 'bitnami/kafka:latest'
#    ports:
#      - '29092:29092'
#      - '9092:9092'
#    environment:
#      - KAFKA_BROKER_ID=0
#      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
#      - ALLOW_PLAINTEXT_LISTENER=yes
#      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
#      - KAFKA_CFG_LISTENERS=PLAINTEXT_DEBEZIUM://:29092,PLAINTEXT_UI://:9091,PLAINTEXT://:9092,INTERNAL://kafka:9093
#      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT_DEBEZIUM://kafka:29092,PLAINTEXT_UI://kafka:9091,PLAINTEXT://localhost:9092,INTERNAL://kafka:9093
#      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT_DEBEZIUM:PLAINTEXT,INTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_UI:PLAINTEXT
#    depends_on:
#      - zookeeper
#  #    networks:
#  #      - mynetwork
#  #    volumes:
#  #      - ./kafka-persistence-kafka:/bitnami/kafka
#  zookeeper-account:
#    container_name: local-zookeeper-account
#    image: 'zookeeper:latest'
#    ports:
#      - '2182:2181'
#    environment:
#      - ZOOKEEPER_CLIENT_PORT=2181
#      - ALLOW_ANONYMOUS_LOGIN=yes
#  #    networks:
#  #      - mynetwork
#  kafka-account-server:
#    container_name: local-kafka-account-server
#    image: 'bitnami/kafka:latest'
#    ports:
#      - '9093:9093'
#    environment:
#      - KAFKA_BROKER_ID=0
#      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper-account:2181
#      - ALLOW_PLAINTEXT_LISTENER=yes
#      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
#      - KAFKA_CFG_LISTENERS=PLAINTEXT_UI://:9091,PLAINTEXT://:9093,INTERNAL://kafka-account-server:9094
#      # PLAINTEXT://localhost:9092, this config will be read by client outside the docker, so if config kafka:9092 -> external read kafka:9092 too.
#      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT_UI://kafka-account-server:9091,PLAINTEXT://localhost:9093,INTERNAL://kafka-account-server:9094
#      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_UI:PLAINTEXT
#    depends_on:
#      - zookeeper-account